#Kotlin与C的区别
  1.null(空值)值和unit：
    首先null意为什么都没有、不止是空白、而是不存在、在Kotlin中任何变量都可以是null
    unit意为空白nuit值的类型也是unit,类比与C中的void
      
  2."="的区别:
    首先"==" 用于内容比较（相等性比较）：
      == 比较的是两个对象内容是否相等。也就是说，它会判断两个对象的值是否一致，而不是它们引用的地址。
      如果只是想判断数据是否一致，比如比较两个字符串的内容，直接用 == 即可
    而"===" 用于引用比较（同一性比较）：
      "===" 判断的是两个对象是否指向同一个引用地址，换句话说，它会检查这两个变量是否为同一个对象。
    总得来说、"=="是比较不同内存中的元素是否相同、"==="而比较的是，是否是同一个引用、或者同一个实例、以及同一块地址空间
    Kotlin是强类型语言如果"=="两边的数据类型不同、会直接拒绝编译
      
  3.在 Kotlin 中，单独的字面量也是一个表达式，该表达式的值是该字面量的值
      3*4<5在这个表达式中、只能先计算3*4否则4<5为false,而3*false完全不合法不可计算
      1+2*3这个表达式则按照数学逻辑来计算、优先计算加减则用()
        
  4.虽然是强类型语言、但是与Javascript一样、编译器会自动推断变量的类型
        val a = 1
    与C不同的是、val定义的变量不可变、变量的值必须在定义时指定，并且此后不能再更改，称之为不可变变量（Immutable Variable）但不等价与常量
    定义一个可变变量则使用var
        var a = 1+2
        
  5.变量的不可变性比想象中的更加重要首先是一条设计理念"Document it or forbid doing so":
      一开始，我们可以让所有的变量都不可变，
      然后，等我们需要可变变量的时候，再去明确地用 var 声明该变量可变，
      这样我们可以刚刚好让那些必须改变的东西可变，但绝不会超出这个范围。
      在调试和性能优化方面，这都能帮我们很多的忙。

  6.Kotlin是一个强类型语言、所以定义一个可变变量后并不能通过赋值改变它的数据类型
    而有时在定义一个变量时不能确定它的数据类型、所以Kotlin允许稍后再给变量指定数据类型
        var a : Int
          a = 2
      若不对变量进行初始化，Kotlin 无法推定 a 的类型，因此必须显式（Explicit）地声明 a 的类型
      类型声明与 C 中不同，要通过冒号 : 连接在变量名之后。Kotlin 中代表整数的类型是 Int（注意大小写）
    但在初始化变量之前a并不会有一个默认值、所以未初始化之前不能调用a、Kotlin会直接拒绝编译
        
  7.在同一个"命名空间"中同一个变量不能重新定义

  8.Kontlin中有五种类型的语句:
    定义:使用class定义类、fun定义方法
    赋值:使用赋值符号给变量赋值的语句
    表达式求值:计算表达式的值
    循环:用while或for进行循环的语句
    块:用 {} 将一些语句包裹起来的结构。块其实是一个『包装袋』，它可以将多条语句在形式上合成一条，这为嵌套提供了极大的方便。
        a = 8+4虽然有表达式求值但也是赋值语句、但与C语言不同赋值不是表达式、不可以使用他的值、a = b = 4 在Kotlin中不合法
      
  9.Kontlin的语句结尾不强制要求书写";"、与JavaScript相同

  10.注释：与C相同

  11.Kontlin不支持隐式转换、1 == 2.0 这条语句不合法
    



